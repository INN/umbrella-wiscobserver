/**
 * @group Color
 * @label Base Color (used for navbar, widget titles, etc.)
 * @type color
 * @default_value #2275bb
 */
/**
 * @group Color
 * @label Header/Footer Color
 * @type color
 * @default_value #222
 */
/**
 * @group Color
 * @label Pre-Footer Color
 * @type color
 * @default_value #ddd
 */
/**
 * @group Color
 * @label Color of links
 * @type color
 * @default_value #2275bb
 */
/**
 * @group Color
 * @label Hover color of links
 * @type color
 * @default_value #2275bb
 */
/**
 * @group Color
 * @label Background color of post meta boxes (author bio, related posts, etc.)
 * @type color
 * @default_value #fff
 */
/**
 * @group Basics
 * @label Body Background Color
 * @type color
 * @default_value #fff
 */
/**
 * @group Basics
 * @label Page Background Color
 * @type color
 * @default_value #fff
 */
/**
 * @group Basics
 * @label Text Color
 * @type color
 * @default_value #333
 */
/**
 * @group Basics
 * @label Default Vertical Spacing
 * @type pixels
 * @default_value 24px
 */
/**
 * @group Typography
 * @label Sans Font Family
 * @type text
 * @default_value "Helvetica Neue", Helvetica, Arial, sans-serif
 */
/**
 * @group Typography
 * @label Serif Font Family
 * @type text
 */
/**
 * @group Typography
 * @label Base Font Size
 * @type pixels
 */
/**
 * @group Typography
 * @label Sans Font Family
 * @type dropdown
 * @options @serifFontFamily|@sansFontFamily
 * @default_value @serifFontFamily
 */
/**
 * @group Typography
 * @label Base Line Height
 * @type text
 * @default_value 1.5
 */
.clearfix {
  *zoom: 1;
}
.clearfix:before,
.clearfix:after {
  display: table;
  content: "";
}
.clearfix:after {
  clear: both;
}
.visuallyhidden {
  position: absolute;
  overflow: hidden;
  clip: rect(0 0 0 0);
  height: 1px;
  width: 1px;
  margin: -1px;
  padding: 0;
  border: 0;
}
.hide-text {
  font: 0/0 a;
  color: transparent;
  text-shadow: none;
  background-color: transparent;
  border: 0;
}
.input-block-level {
  display: block;
  width: 100%;
  min-height: 28px;
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  -ms-box-sizing: border-box;
  box-sizing: border-box;
}
/*
 * Layout and page styles
 */
/* footer */
#site-footer ul,
#site-footer p {
  padding: 0;
}
#site-footer ul.menu li {
  border: 0 !important;
  margin: 0;
  padding: 0;
  line-height: 1.3;
}
#site-footer ul.menu a {
  color: #fff;
}
#site-footer ul.sub-menu {
  padding: 0;
}
#site-footer .menu-item-has-children {
  margin-bottom: 12px !important;
}
#site-footer .menu-item-has-children a,
#site-footer .widget_text h5 {
  font-weight: bold;
  text-transform: uppercase;
}
#site-footer .menu-item-has-children li a,
#site-footer .widget_text p {
  font-weight: 200;
  text-transform: none;
}
#site-footer .widget_text h5 {
  color: #fff;
  margin-bottom: 3px;
  font-size: 16px;
}
#site-footer .widget_text h5 a {
  color: #fff;
}
#site-footer .widget_text p {
  margin-bottom: 8px;
}
#site-footer .widget_text p a {
  color: #fff;
  font-weight: 400;
  font-size: 16px;
}
#site-footer .widget_text p.contact a {
  color: #bd261d;
}
#site-footer .widget_text h5,
#site-footer .widget_nav_menu > div > ul > li.menu-item > a {
  display: block;
  color: #fff;
  font-size: 16px;
  text-transform: uppercase;
  font-weight: bold;
  margin-bottom: 8px;
  padding-bottom: 3px;
  border-bottom: 1px solid #555;
}
#site-footer .widget_nav_menu ul.sub-menu > li {
  font-size: 13.04px;
  line-height: 18px;
}
@media only screen and (max-width: 767px) {
  #site-footer .widget-area,
  #site-footer .widget {
    margin-bottom: 0;
  }
  #site-footer .widget-area:last-child {
    margin-top: 12px;
  }
}
@media only screen and (max-width: 420px) {
  #site-footer .widget_nav_menu ul.sub-menu > li {
    font-size: 16px;
    line-height: 1.4;
    margin-bottom: 6px;
  }
  #site-footer .largo-about p,
  #site-footer .widget_text p {
    font-size: 14px;
  }
}
/*# sourceMappingURL=data:application/json;base64, */