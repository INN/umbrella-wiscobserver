/**
 * @group Color
 * @label Base Color (used for navbar, widget titles, etc.)
 * @type color
 * @default_value #2275bb
 */
/**
 * @group Color
 * @label Header/Footer Color
 * @type color
 * @default_value #222
 */
/**
 * @group Color
 * @label Pre-Footer Color
 * @type color
 * @default_value #ddd
 */
/**
 * @group Color
 * @label Color of links
 * @type color
 * @default_value #2275bb
 */
/**
 * @group Color
 * @label Hover color of links
 * @type color
 * @default_value #2275bb
 */
/**
 * @group Color
 * @label Background color of post meta boxes (author bio, related posts, etc.)
 * @type color
 * @default_value #fff
 */
/**
 * @group Basics
 * @label Body Background Color
 * @type color
 * @default_value #fff
 */
/**
 * @group Basics
 * @label Page Background Color
 * @type color
 * @default_value #fff
 */
/**
 * @group Basics
 * @label Text Color
 * @type color
 * @default_value #333
 */
/**
 * @group Basics
 * @label Default Vertical Spacing
 * @type pixels
 * @default_value 24px
 */
/**
 * @group Typography
 * @label Sans Font Family
 * @type text
 * @default_value "Helvetica Neue", Helvetica, Arial, sans-serif
 */
/**
 * @group Typography
 * @label Serif Font Family
 * @type text
 */
/**
 * @group Typography
 * @label Base Font Size
 * @type pixels
 */
/**
 * @group Typography
 * @label Sans Font Family
 * @type dropdown
 * @options @serifFontFamily|@sansFontFamily
 * @default_value @serifFontFamily
 */
/**
 * @group Typography
 * @label Base Line Height
 * @type text
 * @default_value 1.5
 */
.clearfix {
  *zoom: 1;
}
.clearfix:before,
.clearfix:after {
  display: table;
  content: "";
}
.clearfix:after {
  clear: both;
}
.visuallyhidden {
  position: absolute;
  overflow: hidden;
  clip: rect(0 0 0 0);
  height: 1px;
  width: 1px;
  margin: -1px;
  padding: 0;
  border: 0;
}
.hide-text {
  font: 0/0 a;
  color: transparent;
  text-shadow: none;
  background-color: transparent;
  border: 0;
}
.input-block-level {
  display: block;
  width: 100%;
  min-height: 28px;
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  -ms-box-sizing: border-box;
  box-sizing: border-box;
}
/*
 * Layout and page styles
 */
.textwidget,
.widget ul {
  font-family: 'ff-dagny-web-pro', Helvetica, Arial, sans-serif;
}
/*
 * Styles for single posts
 */
body.single .truth-score {
  max-width: 200px;
  heigh: auto;
  float: left;
  padding-left: 17.021276594%;
  padding-right: 1em;
}
@media only screen and (max-width: 979px) {
  body.single .truth-score {
    padding-left: 6.38297872%;
  }
}
.stories article.sticky-top {
  background-color: #f5f5f5;
  padding: 1em;
  border: 1px solid #aaa;
}
body {
  font-family: 'freight-text-pro', Georgia, serif;
  font-weight: 400;
}
h1,
h2,
h3,
h4,
h5,
h6 {
  font-family: 'minion-pro', Georgia, serif;
  font-weight: 600;
}
a {
  color: #0065a4;
}
a:hover {
  color: #729eca;
}
h5.top-tag,
h5.top-date,
.widgettitle,
.byline,
.sticky-footer-container h4,
.global-nav,
.navbar,
#topics-bar ul,
#supplementary ul.menu,
#supplementary p,
#site-footer .widget_text h5,
#boilerplate,
p.wp-caption-text,
p.wp-media-credit {
  font-family: 'ff-dagny-web-pro', Helvetica, Arial, sans-serif;
  letter-spacing: 0.035em;
}
.navbar li.home-icon > a img {
  height: 28px;
}
h5.top-tag,
h5.top-date {
  font-weight: 400;
}
h5.top-date {
  font-style: italic;
  color: #777;
}
.entry-content p,
.entry-content ul,
.entry-content ol {
  font-size: 21px;
  letter-spacing: 0.035em;
}
.entry-content p.intro {
  font-size: 28px;
}
h1.entry-title,
h1.page-title {
  font-size: 60px;
  font-weight: 500;
}
.single-post h2.subtitle {
  font-size: 21px;
  font-weight: normal;
  color: #999;
}
p.intro,
p.wp-caption-text {
  font-style: normal;
}
.entry-content p.wp-media-credit {
  font-size: 13px;
}
/* Article bottom widgets */
.article-bottom .widget p {
  font-size: 17px;
}
/* Related posts */
.article-bottom .largo-related-posts h4 {
  font-size: 32px;
  line-height: 36px;
}
span.author-posts-link {
  font-family: 'ff-dagny-web-pro', Helvetica, Arial, sans-serif;
  font-size: 14px;
  font-weight: bold;
  float: right;
  clear: both;
}
.primary-featured-post .span8 h2.entry-title {
  line-height: 1.1;
}
.primary-featured-post .entry-content p,
.primary-featured-post .entry-content ul,
.primary-featured-post .entry-content ol {
  font-size: 19px;
}
@media only screen and (max-width: 767px) {
  h1.entry-title {
    font-size: 38px;
  }
}
@media only screen and (max-width: 420px) {
  .entry-content p,
  .entry-content ol,
  .entry-content ul {
    font-size: 18px;
  }
  h1.entry-title {
    font-size: 28px;
  }
}
/*# sourceMappingURL=data:application/json;base64, */